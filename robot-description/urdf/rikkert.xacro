<?xml version="1.0" ?>
<robot name="rikkert" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- ****************** ROBOT CONSTANTS *******************************  -->
  <!-- Define the size of the robot's main chassis in meters -->
  <xacro:property name="base_width" value="0.50"/>
  <xacro:property name="base_length" value="0.81"/>
  <xacro:property name="base_height" value="0.41"/>
	
  <!-- Define the shape of the robot's two back wheels in meters -->
  <xacro:property name="wheel_radius" value="0.17"/>
  <xacro:property name="wheel_width" value="0.06"/>
  <xacro:property name="wheel_y_offset" value="0.285"/>

  <!-- x-axis points forward, y-axis points to left, z-axis points upwards -->
  <!-- Define the gap between the wheel and chassis along y-axis in meters -->
  <xacro:property name="wheel_ygap" value="0.035"/>

  <!-- Position the wheels along the z-axis -->
  <xacro:property name="z_offset" value="0.125"/>
  <xacro:property name="wheel_offset" value="0.03"/>

  <xacro:property name="castor_offset" value="0.12"/>

  <!-- Define intertial property macros  -->
  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
    </inertial>
  </xacro:macro>


  <!-- ****************** ROBOT BASE FOOTPRINT ***************************  -->
  <!-- Define the center of the main robot chassis projected on the ground -->	
  <link name="base_footprint"/>

  <!-- ********************** ROBOT BASE *********************************  -->
  <link name="base_link">
    <visual>
      <origin xyz="0 0 -${z_offset}" rpy="0 0 ${pi/2}"/>
      <geometry>
        <mesh filename="package://rikkert_description/meshes/Base_platform.stl" scale="0.001 0.001 0.001" />
      </geometry>
      <material name="Grey">
        <color rgba="${191/255} ${191/255} ${191/255} 1.0"/>
      </material>
    </visual>

    <collision>
      <origin xyz="0 0 -${z_offset}" rpy="0 0 ${pi/2}"/>
      <geometry>
        <mesh filename="package://rikkert_description/meshes/Base_platform.stl" scale="0.001 0.001 0.001" />
      </geometry>
    </collision>

    <xacro:box_inertia m="40.0" w="${base_width}" d="${base_length}" h="${base_height}"/>
    
  </link>

    <!-- The base footprint of the robot is located underneath the chassis -->
  <joint name="footprint_base" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link" />
    <origin xyz="0.0 0.0 ${z_offset}" rpy="0 0 0"/>
  </joint>


  <!-- *********************** DRIVE WHEELS ******************************  -->

    <link name="right_wheel">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 ${-pi/2}"/>
            <geometry>
                <mesh filename="package://rikkert_description/meshes/Drive_Wheel.stl" scale="0.001 0.001 0.001" />
            </geometry>
            <material name="White">
                <color rgba="${255/255} ${255/255} ${255/255} 1.0"/>
            </material>
        </visual>
        
        <collision>
            <origin xyz="0 0 0" rpy="0 0 ${-pi/2}"/>
            <geometry>
                <mesh filename="package://rikkert_description/meshes/Drive_Wheel.stl" scale="0.001 0.001 0.001" />
            </geometry>
        </collision>
        <xacro:cylinder_inertia m="110.5" r="${wheel_radius}" h="${wheel_width}"/>
    </link>

<!-- Connect the wheels to the base_link at the appropriate location, and 
        define a continuous joint to allow the wheels to freely rotate about
        an axis -->
    <joint name="right_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="right_wheel"/>
        <origin xyz="${base_width/2 + wheel_offset} -${wheel_y_offset} 0.05" rpy="0 0 0"/>
        <!-- <limit upper="3.1415" lower="-3.1415" effort="30" velocity="5.0"/> -->
        <axis xyz="0 1 0"/>
    </joint>

    <link name="left_wheel">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 ${pi/2}"/>
            <geometry>
                <mesh filename="package://rikkert_description/meshes/Drive_Wheel.stl" scale="0.001 0.001 0.001" />
            </geometry>
            <material name="White">
                <color rgba="${255/255} ${255/255} ${255/255} 1.0"/>
            </material>
        </visual>
        
        <collision>
            <origin xyz="0 0 0" rpy="0 0 ${pi/2}"/>
            <geometry>
                <mesh filename="package://rikkert_description/meshes/Drive_Wheel.stl" scale="0.001 0.001 0.001" />
            </geometry>
        </collision>
        <xacro:cylinder_inertia m="110.5" r="${wheel_radius}" h="${wheel_width}"/>
    </link>

<!-- Connect the wheels to the base_link at the appropriate location, and 
        define a continuous joint to allow the wheels to freely rotate about
        an axis -->
<joint name="left_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="left_wheel"/>
    <origin xyz="${base_width/2 + wheel_offset} ${wheel_y_offset} 0.05" rpy="0 0 0"/>
    <!-- <limit upper="3.1415" lower="-3.1415" effort="30" velocity="5.0"/> -->
    <axis xyz="0 1 0"/>
</joint>

  <!-- *********************** CASTER WHEEL ******************************  -->
  <!-- We add a caster wheel. It will be modeled as sphere.
       We define the wheelâ€™s geometry, material and the joint to connect it to 
       base_link at the appropriate location. -->
  <link name="rear_caster">
    <visual>
      <origin xyz="0 0 0" rpy="${pi} 0 ${pi}"/>
      <geometry>
        <mesh filename="package://rikkert_description/meshes/Castor_Wheel.stl" scale="0.001 0.001 0.001" />
      </geometry>
      <material name="Blue">
        <color rgba="${0/255} ${0/255} ${255/255} 1.0"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="${pi} 0 ${pi}"/>
      <geometry>
        <mesh filename="package://rikkert_description/meshes/Castor_Wheel.stl" scale="0.001 0.001 0.001" />
      </geometry>
    </collision>
    <xacro:sphere_inertia m="10.05" r="${wheel_radius}"/>
  </link>


  <joint name="caster_joint" type="fixed">
    <parent link="base_link"/>
    <child link="rear_caster"/>
    <origin xyz="${-(base_length/2 - castor_offset)} 0 0" rpy="0 0 0"/>
  </joint>


 <!-- ********************** SENSORS **************************** -->
    <link name="hokuyo">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <mesh filename="package://rikkert_description/meshes/Hokuyo_UTM-30LX.stl" scale="0.01 0.01 0.01" />
            </geometry>
            <material name="black">
                <color rgba="${0/255} ${0/255} ${0/255} 0.9"/>
            </material>
        </visual>
        
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <mesh filename="package://rikkert_description/meshes/Hokuyo_UTM-30LX.stl" scale="0.01 0.01 0.01" />
            </geometry>
        </collision>
        <xacro:cylinder_inertia m="110.5" r="${wheel_radius}" h="${wheel_width}"/>
    </link>

  <joint name="hokuyo_joint" type="fixed">
    <parent link="base_link"/>
    <child link="hokuyo"/>
    <origin xyz="0 0 ${base_height+0.005}" rpy="0 0 0"/>
  </joint>

  <link name="rs_bpearl">
    <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <mesh filename="package://rikkert_description/meshes/RS_BPearl.stl" scale="0.001 0.001 0.001" />
        </geometry>
        <material name="black">
            <color rgba="${0/255} ${0/255} ${0/255} 0.9"/>
        </material>
    </visual>
    
    <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <mesh filename="package://rikkert_description/meshes/RS_BPearl.stl" scale="0.001 0.001 0.001" />
        </geometry>
    </collision>
    <xacro:cylinder_inertia m="110.5" r="${wheel_radius}" h="${wheel_width}"/>
</link>

  <joint name="bpearl_joint" type="fixed">
    <parent link="base_link"/>
    <child link="rs_bpearl"/>
    <origin xyz="${base_length/2+0.0025} 0 ${base_height-0.1}" rpy="0 ${-pi/2} ${pi}"/>
  </joint>

</robot>